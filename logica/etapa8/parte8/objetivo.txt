Sistema com Persist√™ncia em Arquivos Externos

üéØ Objetivo:
Criar um sistema realista e reutiliz√°vel que receba dados estruturados (como os que voc√™ j√° tratou), armazene esses dados em arquivos externos,
e permita leitura e an√°lise posterior, simulando os princ√≠pios de persist√™ncia usados em bancos de dados.

----------------------------------------
üß© Sistema que voc√™ ir√° desenvolver:
ü©∫ Sistema de Registro de Atendimentos de Cl√≠nica

üì• Entrada de dados (via entrada.py)
Voc√™ receber√° para cada paciente:

nome (str)

idade (int)

motivo da consulta (str)

valor da consulta (float)

data (str, formato DD/MM/AAAA)

| Tarefa                     | Explica√ß√£o                                                                                           |
| -------------------------- | ---------------------------------------------------------------------------------------------------- |
| 1. `salvar_em_txt`         | Salva os dados formatados como relat√≥rio de texto leg√≠vel                                            |
| 2. `salvar_em_json`        | Salva os dados como lista de dicion√°rios no JSON                                                     |
| 3. `salvar_em_csv`         | Salva os dados em colunas separadas por v√≠rgula                                                      |
| 4. `carregar_de_json`      | Abre o arquivo `.json` e transforma de volta em lista de dicion√°rios                                 |
| 5. `carregar_de_csv`       | L√™ o CSV e retorna os dados estruturados                                                             |
| 6. `gerar_relatorio_final` | Imprime: total recebido, m√©dia por consulta, paciente mais recorrente, valor total por paciente, etc |

-----------------------------------
üî® O que voc√™ deve implementar
entrada.py
Fun√ß√£o entrada_pacientes() que retorna List[Dict[str, Union[str, int, float]]]

persistencia.py
Fun√ß√µes:

salvar_em_txt(dados: List[Dict]) -> None

salvar_em_json(dados: List[Dict]) -> None

salvar_em_csv(dados: List[Dict]) -> None

carregar_de_json() -> List[Dict]

carregar_de_csv() -> List[Dict]

processamento.py
Fun√ß√µes:

total_consultas(dados)

media_valores(dados)

paciente_mais_frequente(dados)

valor_total_por_paciente(dados)

main.py
Mostra menu:

markdown
Copiar
Editar
1. Registrar novo atendimento
2. Salvar em TXT / JSON / CSV
3. Carregar arquivo existente
4. Mostrar estat√≠sticas
5. Sair

---------------------------------------------------------
üß† Termos t√©cnicos usados nesta etapa:
Termo	Significado
Persist√™ncia de dados	Guardar informa√ß√µes fora da mem√≥ria RAM (arquivo ou banco)
Serializa√ß√£o	Converter estruturas Python em formatos como JSON ou CSV
Deserializa√ß√£o	Converter um JSON ou CSV de volta para Python
Relat√≥rio	Impress√£o organizada com c√°lculos feitos a partir dos dados

---------------------------------------------------------

üìå Desafio adicional (se quiser ir al√©m):
Criar um backup autom√°tico do JSON com data no nome do arquivo.

Permitir atualizar um valor de consulta por nome de paciente.

Listar apenas os atendimentos de uma data espec√≠fica.